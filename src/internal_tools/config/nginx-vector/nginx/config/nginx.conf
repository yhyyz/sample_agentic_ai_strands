worker_processes auto;
pid /run/nginx.pid;

worker_rlimit_nofile 65535;

include /usr/share/nginx/modules/*.conf;

events {
    worker_connections %%NGINX_WORKER_CONNECTIONS%%;
}

http {

    access_log  /dev/stdout;
    error_log   /dev/stdout info;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 4096;
    server_tokens       off;
    proxy_method        POST;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    include /etc/nginx/conf.d/*.conf;
    underscores_in_headers on;
    # limit_req_zone $http_x_forwarded_for zone=iplimit:10m rate=10r/s;

    server {
        listen       8802;
        server_name  _;

        include /etc/nginx/default.d/*.conf;

        set $cosrCondition 0;
        set $corsOptions 0;
      
        location %%SERVER_ENDPOINT_PATH%% {
            access_log off;
            # limit_req zone=iplimit;
            # limit_req_status 444;

            add_header Content-Type text/plain;
            if ($http_origin ~* (%%SERVER_CORS_ORIGIN%%)) {
                add_header 'Access-Control-Allow-Origin' "$http_origin";
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
                set $cosrCondition 1;
            }

            if ($request_method = OPTIONS) {
                set $corsOptions "${cosrCondition}1";
            }

            if ($corsOptions = 11) {
                add_header 'Access-Control-Allow-Origin' "$http_origin";
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
                return 204;
            }

            add_header 'X-Request-ID' $request_id;

            proxy_set_header 'X_Uri'                   $request_uri;
            proxy_set_header 'X_User_Agent'            $http_user_agent;
            proxy_set_header 'X_Forwarded_For'         $http_x_forwarded_for;
            proxy_set_header 'X_Date'                  $time_iso8601;
            proxy_set_header 'X_Request_ID'            $request_id;
            proxy_set_header 'X_Method'                $request_method;
            proxy_set_header 'X_Remote_Addr'           $remote_addr;
            proxy_set_header 'project'                 $http_project;
            proxy_set_header 'compression'             'gzip';
            
            proxy_pass http://127.0.0.1:8685;
        }

        location %%PING_ENDPOINT_PATH%% {
            access_log off;

            add_header Content-Type application/json;
            if ($http_origin ~* (%%SERVER_CORS_ORIGIN%%)) {
                add_header 'Access-Control-Allow-Origin' "$http_origin";
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
                set $cosrCondition 1;
            }

            if ($request_method = OPTIONS) {
                set $corsOptions "${cosrCondition}1";
            }

            if ($corsOptions = 11) {
                add_header 'Access-Control-Allow-Origin' "$http_origin";
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
                return 204;
            }

            add_header 'X-Request-ID' $request_id;            
            return 200 '{"timestamp": $msec}';
        }        

        location = /health {
            access_log off;
            error_log off;
            chunked_transfer_encoding off;
            proxy_buffering off;
            proxy_read_timeout 1s;

            proxy_pass http://127.0.0.1:8686;
        }
    }
}

